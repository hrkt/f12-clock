var F12Clock=function(t){"use strict";class s{static hourHandChar="#";static minuteHandChar="$";static secondHandChar='"';constructor(){this.canvasWidth=60,this.canvasHeight=30,this.centerX=this.canvasWidth/2,this.centerY=this.canvasHeight/2,this.armLength=Math.min(this.canvasWidth,this.canvasHeight)/2,this.scaleX=1*this.canvasWidth/2/this.armLength,this.scaleY=1*this.canvasHeight/2/this.armLength,this.secondArmLength=.95*this.armLength,this.minuteArmLength=.95*this.armLength,this.hourArmLength=.65*this.armLength,this.options={},this.options.showDigitalStrings=!0,this.options.showClockFace=!0,this.f12clockNode=document.getElementById("f12-clock"),this.prevNodes=this.createCommentNodes(),this.createView(!1),this.start()}drawPoint(t,s,e,i){s<0||s>=this.canvasWidth||e<0||e>=this.canvasHeight||(t[e][s]=i)}drawLine(t,s,e,i,h,n="+"){s=parseInt(s),e=parseInt(e),i=parseInt(i),h=parseInt(h);const a=Math.abs(i-s),r=Math.abs(h-e),c=s<i?1:-1,o=e<h?1:-1;let d=a-r,g=!0;for(;g;)if(this.drawPoint(t,s,e,n),s===i&&e===h)g=!1;else{const t=2*d;t>-r&&(d-=r,s+=c),t<a&&(d+=a,e+=o)}}createCanvas(t="-"){const s=new Array(this.canvasHeight);for(let e=0;e<this.canvasHeight;e++)s[e]=new Array(this.canvasWidth).fill(t);return s}clearCanvas(t,s="-"){for(let e=0;e<this.canvasHeight;e++)for(let i=0;i<this.canvasWidth;i++)t[i][e]=s}toRad(t){return t/180*Math.PI}updateCurrentTime(){const t=new Date;this.hour=t.getHours(),this.minute=t.getMinutes(),this.second=t.getSeconds()}drawString(t,s="",e=0,i=0){for(let h=0;h<s.length;h++)e>=0&&e+h<this.canvasWidth&&i>=0&&i<this.canvasHeight&&(t[i][e+h]=s.charAt(h))}drawClock(t){this.updateCurrentTime();const e=90-30*(this.hour%12+this.minute/60),i=this.centerX+this.scaleX*this.hourArmLength*Math.cos(this.toRad(e)),h=this.centerY-this.scaleY*this.hourArmLength*Math.sin(this.toRad(e)),n=90-6*this.minute,a=this.centerX+this.scaleX*this.minuteArmLength*Math.cos(this.toRad(n)),r=this.centerY-this.scaleY*this.minuteArmLength*Math.sin(this.toRad(n)),c=90-6*this.second,o=this.centerX+this.scaleX*this.secondArmLength*Math.cos(this.toRad(c)),d=this.centerY-this.scaleY*this.secondArmLength*Math.sin(this.toRad(c));this.drawLine(t,this.centerX,this.centerY,o,d,s.secondHandChar),this.drawLine(t,this.centerX,this.centerY,a,r,s.minuteHandChar),this.drawLine(t,this.centerX,this.centerY,i,h,s.hourHandChar);const g=String(this.hour).padStart(2,"0")+":"+String(this.minute).padStart(2,"0")+":"+String(this.second).padStart(2,"0");this.drawString(t,"O",this.centerX,this.centerY),void 0!==this.options.showDigitalStrings&&this.drawString(t,g,0,0),void 0!==this.options.showClockFace&&(this.drawString(t,"12",this.centerX,0),this.drawString(t,"6",this.centerX,this.canvasHeight-1),this.drawString(t,"9",0,this.centerY),this.drawString(t,"3",this.canvasWidth-1,this.centerY))}createComments(){const t=this.createCanvas();this.drawClock(t);const s=[];for(let e=0;e<this.canvasHeight;e++)s[e]=t[e].join("");return s}createCommentNodes(){const t=this.createComments(),s=[];for(let e=0;e<this.canvasHeight;e++)s[e]=document.createComment(t[e]);return s}updateCommentNodes(){const t=this.createComments();for(let s=0;s<this.prevNodes.length;s++)this.prevNodes[s].nodeValue=t[s]}createView(){const t=this.createCommentNodes();for(let s=0;s<this.canvasHeight;s++)this.f12clockNode.appendChild(t[s]);this.prevNodes=t}start(){setInterval(this.updateCommentNodes.bind(this),1e3)}}return new s,t.F12Clock=s,Object.defineProperty(t,"__esModule",{value:!0}),t}({});
